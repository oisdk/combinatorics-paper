\begin{code}
{-# OPTIONS --cubical --safe #-}

module Algebra.Nat where

open import Algebra
open import Data.Nat
open import Path
open import Path.Reasoning
open import Level
open import Data.Nat.Properties

\end{code}
%<*plus-monoid>
\begin{code}
-- Proofs moved to data.nat.properties
+-mon : Monoid _
+-mon = record
  { ùëÜ      = ‚Ñï
  ; _‚àô_    = _+_
  ; Œµ      = zero
  ; assoc  = +-assoc
  ; Œµ‚àô     = +-idÀ°
  ; ‚àôŒµ     = +-id ≥
  }
\end{code}
%</plus-monoid>
\begin{code}
‚Ñï-semiring : Semiring ‚Ñì-zero
‚Ñï-semiring = record
  { nearSemiring = record
    { _+_ = _+_
    ; _*_ = _*_
    ; 0# = 0
    ; 1# = 1
    ; +-assoc = +-assoc
    ; *-assoc = *-assoc
    ; 0+ = Œª _ ‚Üí refl
    ; +0 = +-id ≥
    ; 1* = 1*
    ; *1 = *1
    ; 0* = Œª y ‚Üí refl
    ; ‚ü®+‚ü©* = ‚ü®+‚ü©*
    }
  ; +-comm = +-comm
  ; *0 = *0
  ; *‚ü®+‚ü© = *‚ü®+‚ü©
  }
\end{code}
